#! /bin/sh
### BEGIN INIT INFO
# Provides:          gunicorn-initscript
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     30 2 3 4 5
# Default-Stop:      70 0 1 6
# Short-Description: virtualenv + twistd + lisa debian init script
# Description:       virtualenv + twistd + lisa debian init script
### END INIT INFO

PROJECT=/home/alivelisa
VIRTUALENV=.virtualenvs/lisa-server
LOGDIR=/var/log/lisa/
PATH=/bin:/usr/bin
USER=alivelisa
GROUP=alivelisa

# I am lazy and just call the init script gunicorn-project
NAME=`basename $0`
DESC=$NAME
LOGFILE="$LOGDIR$NAME.log"
PIDFILE="$PROJECT$NAME.pid"
CMD="twistd -u $USER -g $GROUP --pidfile=$PIDFILE --logfile=$LOGFILE lisa-server"

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start() {
  # Return
  #   0 if daemon has been started
  #   1 if daemon was already running
  #   2 if daemon could not be started
  if [ -e $PIDFILE ]; then
    return 1
  fi
  cd $PROJECT
  . $VIRTUALENV/bin/activate
  $CMD
  log_daemon_msg "Starting $DESC"
  if [ $? = 0 ]; then
    return 0
  else
    return 2
  fi
}

#
# Function that stops the daemon/service
#
do_stop() {
  # Return
  #   0 if daemon has been stopped
  #   1 if daemon was already stopped
  #   2 if daemon could not be stopped
  #   other if a failure occurred
  if [ -f $PIDFILE ]; then
    PID=`cat $PIDFILE`
    rm $PIDFILE
    kill -15 $PID
    log_daemon_msg "Stopping $DESC"
    if [ $? = 0 ]; then
      return 0
    else
      return 2
    fi
  else
    return 1
  fi
}

do_reload() {
  if [ -f $PIDFILE ]; then
    PID=`cat $PIDFILE`
    kill -HUP $PID
    return $?
  fi
  return 2
}

case "$1" in
  start)
  [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
  do_start
  case "$?" in
    0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
    2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
  esac
  ;;
  stop)
  [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
  do_stop
  case "$?" in
    0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
    2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
  esac
  ;;
  restart)
  log_daemon_msg "Restarting $DESC" "$NAME"
  do_stop
  case "$?" in
    0|1)
    do_start
    case "$?" in
      0) log_end_msg 0 ;;
      1) log_end_msg 1 ;; # Old process is still running
      *) log_end_msg 1 ;; # Failed to start
    esac
    ;;
    *)
      # Failed to stop
    log_end_msg 1
    ;;
  esac
  ;;
  reload)
  log_daemon_msg "Reloading $DESC" "$NAME"
  do_reload
  case "$?" in
    0) log_end_msg 0 ;;
    *) log_end_msg 1 ;;
  esac
  ;;
  *)
  echo "Usage: $SCRIPTNAME {start|stop|restart|reload}" >&2
  exit 3
  ;;
esac

:




#! /bin/sh -e

BASENAME=`basename $0`
NAME=$BASENAME             # Introduce the short server's name here
DAEMONUSER="alivelisa"     
DAEMON=/usr/bin/twistd     # Introduce the server's location here
DAEMON_ARGS=""             # Arguments to run the daemon with
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
LOGFILE=/var/log/twisted/$NAME.log

PATH="/sbin:/bin:/usr/sbin:/usr/bin" #Ne pas toucher

test -x $DAEMON || exit 0

. /lib/lsb/init-functions

d_start () {
        log_daemon_msg "Starting $DEAMON"
	start-stop-daemon --start --quiet --pidfile $PIDFILE  --exec $DAEMON -- \
                --pidfile=$PIDFILE \
                --logfile=$LOGFILE \
		--chuid $DAEMONUSER \
                $TWISTED_ARGS \
                $TWISTED_PLUGIN \
		$TWISTED_PLUGIN_ARGS \
        log_end_msg $?
}

d_stop () {
        log_daemon_msg "Stopping $NAME"
        start-stop-daemon --name $DEAMON --stop --retry 5 --quiet
	log_end_msg $?
}

case "$1" in

        start|stop)
                d_${1}
                ;;

        restart|reload|force-reload)
                        d_stop
                        d_start
                ;;

        force-stop)
               d_stop
                killall -q $NAME || true
                sleep 2
                killall -q -9 $NAME || true
                ;;

        status)
                status_of_proc "$NAME" "$DAEMON" "system-wide $NAME" && exit 0 || exit $?
                ;;
        *)
                echo "Usage: /etc/init.d/$NAME {start|stop|force-stop|restart|reload|force-reload|status}"
                exit 1
                ;;
esac
exit 0
